function create_geometry_314(scene)
{
      var mesh;
      var material;
      var geometry;
         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            -35.169, -333.331, 48.643,
            -15.134, -340.024, 95.571,
            15.189, -340.024, 95.571,
            15.189, -340.024, 95.571,
            35.224, -333.331, 48.643,
            -35.169, -333.331, 48.643,
            -35.169, -341.790, 47.405,
            35.224, -341.790, 47.405,
            15.189, -344.082, 95.571,
            15.189, -344.082, 95.571,
            -15.134, -344.082, 95.571,
            -35.169, -341.790, 47.405,
            -35.169, -333.331, 48.643,
            35.224, -333.331, 48.643,
            35.224, -341.790, 47.405,
            35.224, -341.790, 47.405,
            -35.169, -341.790, 47.405,
            -35.169, -333.331, 48.643,
            35.224, -333.331, 48.643,
            15.189, -340.024, 95.571,
            15.189, -344.082, 95.571,
            15.189, -344.082, 95.571,
            35.224, -341.790, 47.405,
            35.224, -333.331, 48.643,
            15.189, -340.024, 95.571,
            -15.134, -340.024, 95.571,
            -15.134, -344.082, 95.571,
            -15.134, -344.082, 95.571,
            15.189, -344.082, 95.571,
            15.189, -340.024, 95.571,
            -15.134, -340.024, 95.571,
            -35.169, -333.331, 48.643,
            -35.169, -341.790, 47.405,
            -35.169, -341.790, 47.405,
            -15.134, -344.082, 95.571,
               -15.134, -340.024, 95.571
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            0.000, 0.990, 0.141,
            -0.000, 0.990, 0.141,
            0.000, 0.990, 0.141,
            0.000, 0.990, 0.141,
            0.000, 0.990, 0.141,
            0.000, 0.990, 0.141,
            -0.000, -0.999, -0.048,
            -0.000, -0.999, -0.048,
            -0.000, -0.999, -0.048,
            -0.000, -0.999, -0.048,
            0.000, -0.999, -0.048,
            -0.000, -0.999, -0.048,
            -0.000, 0.145, -0.989,
            -0.000, 0.145, -0.989,
            -0.000, 0.145, -0.989,
            -0.000, 0.145, -0.989,
            -0.000, 0.145, -0.989,
            -0.000, 0.145, -0.989,
            0.923, -0.053, 0.382,
            0.920, -0.000, 0.393,
            0.920, -0.006, 0.391,
            0.920, -0.006, 0.391,
            0.923, -0.056, 0.381,
            0.923, -0.053, 0.382,
            -0.000, 0.000, 1.000,
            -0.000, 0.000, 1.000,
            -0.000, 0.000, 1.000,
            -0.000, 0.000, 1.000,
            -0.000, 0.000, 1.000,
            -0.000, 0.000, 1.000,
            -0.923, -0.005, 0.384,
            -0.921, -0.056, 0.385,
            -0.921, -0.053, 0.385,
            -0.921, -0.053, 0.385,
            -0.923, 0.000, 0.384,
               -0.923, -0.005, 0.384
            ])
         }
         };

         material = new THREE.MeshPhongMaterial({
            color: 0xBFBFC1,
            shininess: 2.297,
            ambient: 0x0B0101,
            side: THREE.FrontSide,
            specular: 0xD2D2D2
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

}
