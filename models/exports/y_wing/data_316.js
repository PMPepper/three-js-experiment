function create_geometry_316(scene)
{
      var mesh;
      var material;
      var geometry;
         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            0.431, -322.014, -67.652,
            0.431, -110.568, -67.652,
            -23.609, -110.568, -62.978,
            -23.609, -322.014, -62.978,
            0.431, -322.014, -67.652,
            -23.609, -110.568, -62.978,
            0.548, -322.014, -69.260,
            0.548, -110.568, -69.260,
            0.431, -110.568, -67.652,
            0.431, -322.014, -67.652,
            0.548, -322.014, -69.260,
            0.431, -110.568, -67.652,
            -1.461, -322.014, -71.407,
            -1.461, -110.568, -71.407,
            0.548, -110.568, -69.260,
            0.548, -322.014, -69.260,
            -1.461, -322.014, -71.407,
            0.548, -110.568, -69.260,
            -16.401, -322.014, -69.846,
            -16.401, -110.568, -69.846,
            -1.461, -110.568, -71.407,
            -1.461, -322.014, -71.407,
            -16.401, -322.014, -69.846,
            -1.461, -110.568, -71.407,
            -26.155, -322.014, -67.891,
            -26.155, -110.568, -67.891,
            -16.401, -110.568, -69.846,
            -16.401, -322.014, -69.846,
            -26.155, -322.014, -67.891,
            -16.401, -110.568, -69.846,
            -26.325, -322.014, -64.035,
            -26.325, -110.568, -64.035,
            -26.155, -110.568, -67.891,
            -26.155, -322.014, -67.891,
            -26.325, -322.014, -64.035,
            -26.155, -110.568, -67.891,
            -23.609, -322.014, -62.978,
            -23.609, -110.568, -62.978,
            -26.325, -110.568, -64.035,
            -26.325, -322.014, -64.035,
            -23.609, -322.014, -62.978,
            -26.325, -110.568, -64.035,
            -26.155, -110.568, -67.891,
            -26.325, -110.568, -64.035,
            -16.401, -110.568, -69.846,
            -26.325, -110.568, -64.035,
            -23.609, -110.568, -62.978,
            -16.401, -110.568, -69.846,
            -23.609, -110.568, -62.978,
            0.431, -110.568, -67.652,
            -16.401, -110.568, -69.846,
            -16.401, -110.568, -69.846,
            0.431, -110.568, -67.652,
            -1.461, -110.568, -71.407,
            -1.461, -110.568, -71.407,
            0.431, -110.568, -67.652,
            0.548, -110.568, -69.260,
            -26.325, -322.014, -64.035,
            -26.155, -322.014, -67.891,
            -16.401, -322.014, -69.846,
            -23.609, -322.014, -62.978,
            -26.325, -322.014, -64.035,
            -16.401, -322.014, -69.846,
            0.431, -322.014, -67.652,
            -23.609, -322.014, -62.978,
            -16.401, -322.014, -69.846,
            0.431, -322.014, -67.652,
            -16.401, -322.014, -69.846,
            -1.461, -322.014, -71.407,
            0.431, -322.014, -67.652,
            -1.461, -322.014, -71.407,
               0.548, -322.014, -69.260
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            -0.191, -0.000, -0.982,
            -0.191, -0.000, -0.982,
            -0.191, -0.000, -0.982,
            -0.191, -0.000, -0.982,
            -0.191, -0.000, -0.982,
            -0.191, -0.000, -0.982,
            0.898, -0.000, -0.440,
            0.898, -0.000, -0.440,
            0.898, -0.000, -0.440,
            0.898, -0.000, -0.440,
            0.898, -0.000, -0.440,
            0.898, -0.000, -0.440,
            0.933, -0.000, 0.360,
            0.933, -0.000, 0.360,
            0.933, -0.000, 0.360,
            0.933, -0.000, 0.360,
            0.933, -0.000, 0.360,
            0.933, -0.000, 0.360,
            0.276, 0.000, 0.961,
            0.276, 0.000, 0.961,
            0.276, 0.000, 0.961,
            0.276, 0.000, 0.961,
            0.276, 0.000, 0.961,
            0.276, 0.000, 0.961,
            0.185, 0.000, 0.983,
            0.185, 0.000, 0.983,
            0.185, 0.000, 0.983,
            0.185, 0.000, 0.983,
            0.185, 0.000, 0.983,
            0.185, 0.000, 0.983,
            -0.910, 0.000, 0.415,
            -0.910, 0.000, 0.415,
            -0.910, 0.000, 0.415,
            -0.910, 0.000, 0.415,
            -0.910, 0.000, 0.415,
            -0.910, 0.000, 0.415,
            -0.685, 0.000, -0.728,
            -0.685, 0.000, -0.728,
            -0.685, 0.000, -0.728,
            -0.685, 0.000, -0.728,
            -0.685, 0.000, -0.728,
            -0.685, 0.000, -0.728,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            -0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            -0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
            -0.000, 1.000, 0.000,
            0.000, 1.000, 0.000,
               -0.000, 1.000, 0.000
            ])
         },
         uv: {
            itemSize: 2,
            array: new Float32Array([
               0.773, 0.441,
               0.033, 0.441,
               0.033, 0.914,
               0.773, 0.914,
               0.773, 0.441,
               0.033, 0.914,
               0.773, 0.436,
               0.033, 0.436,
               0.033, 0.441,
               0.773, 0.441,
               0.773, 0.436,
               0.033, 0.441,
               0.773, 0.470,
               0.033, 0.470,
               0.033, 0.436,
               0.773, 0.436,
               0.773, 0.470,
               0.033, 0.436,
               0.773, 0.761,
               0.033, 0.761,
               0.033, 0.470,
               0.773, 0.470,
               0.773, 0.761,
               0.033, 0.470,
               0.773, 0.953,
               0.033, 0.953,
               0.033, 0.761,
               0.773, 0.761,
               0.773, 0.953,
               0.033, 0.761,
               0.773, 0.964,
               0.033, 0.964,
               0.033, 0.953,
               0.773, 0.953,
               0.773, 0.964,
               0.033, 0.953,
               0.773, 0.914,
               0.033, 0.914,
               0.033, 0.964,
               0.773, 0.964,
               0.773, 0.914,
               0.033, 0.964,
               0.033, 0.953,
               0.033, 0.964,
               0.033, 0.761,
               0.033, 0.964,
               0.033, 0.914,
               0.033, 0.761,
               0.033, 0.914,
               0.033, 0.441,
               0.033, 0.761,
               0.033, 0.761,
               0.033, 0.441,
               0.033, 0.470,
               0.033, 0.470,
               0.033, 0.441,
               0.033, 0.436,
               0.773, 0.964,
               0.773, 0.953,
               0.773, 0.761,
               0.773, 0.914,
               0.773, 0.964,
               0.773, 0.761,
               0.773, 0.441,
               0.773, 0.914,
               0.773, 0.761,
               0.773, 0.441,
               0.773, 0.761,
               0.773, 0.470,
               0.773, 0.441,
               0.773, 0.470,
               0.773, 0.436
            ])
         }
         };

         material = new THREE.MeshBasicMaterial({
            side: THREE.FrontSide,
            map: THREE.ImageUtils.loadTexture('data_YW_CAB_T.jpg')
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

}
