function create_geometry_24(scene)
{
      var mesh;
      var material;
      var geometry;
         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            304.782, 12570.898, -6128.381,
            267.666, 12570.898, -6173.737,
            289.935, 12570.898, -6200.951,
            289.935, 12570.898, -6200.951,
            267.666, 12570.898, -6173.737,
            -868.086, 12570.902, -6200.951,
            267.666, 12570.898, -6173.737,
            -845.817, 12570.902, -6173.737,
            -868.086, 12570.902, -6200.951,
            -868.086, 12570.902, -6200.951,
            -845.817, 12570.902, -6173.737,
            -905.202, 12570.906, -6155.595,
            -845.817, 12570.902, -6173.737,
            -882.933, 12570.902, -6128.382,
            -905.202, 12570.906, -6155.595,
            -905.202, 12570.906, -6155.595,
            -882.933, 12570.902, -6128.382,
            -905.202, 12570.906, -5641.737,
            -882.933, 12570.902, -6128.382,
            -882.933, 12570.902, -5668.950,
            -905.202, 12570.906, -5641.737,
            -905.202, 12570.906, -5641.737,
            -882.933, 12570.902, -5668.950,
            -868.086, 12570.902, -5596.382,
            -882.933, 12570.902, -5668.950,
            -845.817, 12570.902, -5623.595,
            -868.086, 12570.902, -5596.382,
            -868.086, 12570.902, -5596.382,
            -845.817, 12570.902, -5623.595,
            289.935, 12570.898, -5596.382,
            -845.817, 12570.902, -5623.595,
            267.666, 12570.898, -5623.595,
            289.935, 12570.898, -5596.382,
            289.935, 12570.898, -5596.382,
            267.666, 12570.898, -5623.595,
            327.051, 12570.898, -5641.737,
            267.666, 12570.898, -5623.595,
            304.782, 12570.898, -5668.950,
            327.051, 12570.898, -5641.737,
            327.051, 12570.898, -5641.737,
            304.782, 12570.898, -5668.950,
            327.051, 12570.898, -6155.595,
            304.782, 12570.898, -5668.950,
            304.782, 12570.898, -6128.381,
            327.051, 12570.898, -6155.595,
            327.051, 12570.898, -6155.595,
            304.782, 12570.898, -6128.381,
            289.935, 12570.898, -6200.951,
            327.051, 12318.543, -5641.739,
            289.935, 12318.543, -5596.384,
            289.935, 12570.898, -5596.382,
            327.051, 12318.543, -5641.739,
            289.935, 12570.898, -5596.382,
            327.051, 12570.898, -5641.737,
            327.051, 12570.898, -6155.595,
            289.935, 12318.543, -6200.953,
            327.051, 12318.543, -6155.598,
            289.935, 12570.898, -6200.951,
            289.935, 12318.543, -6200.953,
            327.051, 12570.898, -6155.595,
            327.051, 12570.898, -6155.595,
            327.051, 12318.543, -6155.598,
            327.051, 12318.543, -5641.739,
            327.051, 12570.898, -6155.595,
            327.051, 12318.543, -5641.739,
            327.051, 12570.898, -5641.737,
            -905.202, 12318.547, -5641.740,
            -868.086, 12570.902, -5596.382,
            -868.086, 12318.547, -5596.385,
            -905.202, 12318.547, -5641.740,
            -905.202, 12570.906, -5641.737,
            -868.086, 12570.902, -5596.382,
            -905.202, 12318.547, -6155.598,
            -905.202, 12570.906, -6155.595,
            -905.202, 12570.906, -5641.737,
            -905.202, 12318.547, -6155.598,
            -905.202, 12570.906, -5641.737,
            -905.202, 12318.547, -5641.740,
            -868.086, 12318.547, -6200.953,
            -905.202, 12570.906, -6155.595,
            -905.202, 12318.547, -6155.598,
            -905.202, 12570.906, -6155.595,
            -868.086, 12318.547, -6200.953,
            -868.086, 12570.902, -6200.951,
            289.935, 12570.898, -6200.951,
            -868.086, 12570.902, -6200.951,
            -868.086, 12318.547, -6200.953,
            -868.086, 12318.547, -6200.953,
            289.935, 12318.543, -6200.953,
            289.935, 12570.898, -6200.951,
            289.935, 12570.898, -5596.382,
            289.935, 12318.543, -5596.384,
            -868.086, 12570.902, -5596.382,
            289.935, 12318.543, -5596.384,
            -868.086, 12318.547, -5596.385,
               -868.086, 12570.902, -5596.382
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.774, 0.000, -0.633,
            -0.774, 0.000, -0.633,
            -0.774, 0.000, -0.633,
            -0.774, 0.000, -0.633,
            -0.774, 0.000, -0.633,
            -0.774, 0.000, -0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            -1.000, 0.000, -0.000,
            -1.000, 0.000, -0.000,
            -1.000, 0.000, -0.000,
            -1.000, 0.000, -0.000,
            -1.000, 0.000, -0.000,
            -1.000, 0.000, -0.000,
            0.774, 0.000, -0.633,
            0.774, 0.000, -0.633,
            0.774, 0.000, -0.633,
            0.774, 0.000, -0.633,
            0.774, 0.000, -0.633,
            0.774, 0.000, -0.633,
            1.000, 0.000, -0.000,
            1.000, 0.000, -0.000,
            1.000, 0.000, -0.000,
            1.000, 0.000, -0.000,
            1.000, 0.000, -0.000,
            1.000, 0.000, -0.000,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            0.000, 0.000, -1.000,
            0.000, 0.000, -1.000,
            0.000, 0.000, -1.000,
            0.000, 0.000, -1.000,
            0.000, 0.000, -1.000,
               0.000, 0.000, -1.000
            ])
         },
         uv: {
            itemSize: 2,
            array: new Float32Array([
               1.000, 0.083,
               1.000, 0.000,
               0.969, 0.999,
               0.969, 0.999,
               1.000, 0.000,
               0.031, 0.999,
               1.000, 0.000,
               1.000, 0.000,
               0.031, 0.999,
               0.031, 0.999,
               1.000, 0.000,
               0.000, 0.999,
               1.000, 0.000,
               1.000, 0.083,
               0.000, 0.999,
               0.000, 0.999,
               1.000, 0.083,
               0.999, 0.925,
               1.000, 0.083,
               1.000, 0.917,
               0.999, 0.925,
               0.999, 0.925,
               1.000, 0.917,
               0.969, 0.999,
               1.000, 0.917,
               1.000, 1.000,
               0.969, 0.999,
               0.969, 0.999,
               1.000, 1.000,
               0.031, 0.999,
               1.000, 1.000,
               1.000, 1.000,
               0.031, 0.999,
               0.031, 0.999,
               1.000, 1.000,
               0.001, 0.925,
               1.000, 1.000,
               1.000, 0.917,
               0.001, 0.925,
               0.001, 0.925,
               1.000, 0.917,
               0.001, 0.075,
               1.000, 0.917,
               1.000, 0.083,
               0.001, 0.075,
               0.001, 0.075,
               1.000, 0.083,
               0.969, 0.999,
               0.142, 0.925,
               0.031, 0.858,
               0.031, 0.999,
               0.142, 0.925,
               0.031, 0.999,
               0.001, 0.925,
               0.001, 0.075,
               0.969, 0.858,
               0.142, 0.075,
               0.969, 0.999,
               0.969, 0.858,
               0.001, 0.075,
               0.001, 0.075,
               0.142, 0.075,
               0.142, 0.925,
               0.001, 0.075,
               0.142, 0.925,
               0.001, 0.925,
               0.858, 0.925,
               0.969, 0.999,
               0.969, 0.858,
               0.858, 0.925,
               0.999, 0.925,
               0.969, 0.999,
               0.000, 0.858,
               0.000, 0.999,
               0.999, 0.925,
               0.000, 0.858,
               0.999, 0.925,
               0.858, 0.925,
               0.031, 0.858,
               0.000, 0.999,
               0.000, 0.858,
               0.000, 0.999,
               0.031, 0.858,
               0.031, 0.999,
               0.969, 0.999,
               0.031, 0.999,
               0.031, 0.858,
               0.031, 0.858,
               0.969, 0.858,
               0.969, 0.999,
               0.031, 0.999,
               0.031, 0.858,
               0.969, 0.999,
               0.031, 0.858,
               0.969, 0.858,
               0.969, 0.999
            ])
         }
         };

         material = new THREE.MeshBasicMaterial({
            side: THREE.FrontSide,
            map: THREE.ImageUtils.loadTexture('data_ROST03.jpg')
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            267.666, 12570.898, -5623.595,
            304.767, 12318.543, -5668.953,
            304.782, 12570.898, -5668.950,
            267.666, 12570.898, -5623.595,
            267.651, 12318.543, -5623.597,
            304.767, 12318.543, -5668.953,
            267.651, 12318.543, -6171.361,
            304.782, 12570.898, -6128.381,
            304.767, 12318.543, -6126.006,
            267.666, 12570.898, -6173.737,
            304.782, 12570.898, -6128.381,
            267.651, 12318.543, -6171.361,
            -845.831, 12318.547, -5623.598,
            267.666, 12570.898, -5623.595,
            -845.817, 12570.902, -5623.595,
            -845.831, 12318.547, -5623.598,
            267.651, 12318.543, -5623.597,
            267.666, 12570.898, -5623.595,
            -882.933, 12570.902, -5668.950,
            -845.831, 12318.547, -5623.598,
            -845.817, 12570.902, -5623.595,
            -882.933, 12570.902, -5668.950,
            -882.947, 12318.547, -5668.953,
            -845.831, 12318.547, -5623.598,
            -882.947, 12318.547, -6126.006,
            -845.817, 12570.902, -6173.737,
            -845.831, 12318.547, -6171.361,
            -845.817, 12570.902, -6173.737,
            -882.947, 12318.547, -6126.006,
            -882.933, 12570.902, -6128.382,
            267.651, 12318.543, -6171.361,
            -845.831, 12318.547, -6171.361,
            -845.817, 12570.902, -6173.737,
            -845.817, 12570.902, -6173.737,
            267.666, 12570.898, -6173.737,
            267.651, 12318.543, -6171.361,
            -882.947, 12318.547, -5668.953,
            -882.933, 12570.902, -5668.950,
            -882.933, 12570.902, -6128.382,
            -882.947, 12318.547, -5668.953,
            -882.933, 12570.902, -6128.382,
            -882.947, 12318.547, -6126.006,
            304.782, 12570.898, -5668.950,
            304.767, 12318.543, -5668.953,
            304.767, 12318.543, -6126.006,
            304.782, 12570.898, -5668.950,
            304.767, 12318.543, -6126.006,
               304.782, 12570.898, -6128.381
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.003, -0.633,
            0.774, -0.006, -0.633,
            0.774, -0.003, -0.634,
            0.774, -0.006, -0.633,
            0.774, -0.006, -0.633,
            0.774, -0.003, -0.633,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, -0.003, -0.634,
            -0.774, -0.006, -0.633,
            -0.774, -0.003, -0.633,
            -0.774, -0.006, -0.633,
            -0.774, -0.003, -0.634,
            -0.774, -0.006, -0.633,
            -0.000, -0.005, -1.000,
            -0.000, -0.005, -1.000,
            -0.000, -0.009, -1.000,
            -0.000, -0.009, -1.000,
            -0.000, -0.009, -1.000,
            -0.000, -0.005, -1.000,
            -1.000, 0.000, 0.000,
            -1.000, 0.000, 0.000,
            -1.000, 0.000, 0.000,
            -1.000, 0.000, 0.000,
            -1.000, 0.000, 0.000,
            -1.000, 0.000, 0.000,
            1.000, -0.000, 0.000,
            1.000, -0.000, 0.000,
            1.000, -0.000, 0.000,
            1.000, -0.000, 0.000,
            1.000, -0.000, 0.000,
               1.000, -0.000, 0.000
            ])
         }
         };

         material = new THREE.MeshPhongMaterial({
            color: 0x2205FF,
            shininess: 1.072,
            ambient: 0x191919,
            side: THREE.FrontSide,
            specular: 0xE5E5E5
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            -845.818, 10786.465, -6168.982,
            -845.831, 12318.547, -6171.361,
            267.651, 12318.543, -6171.361,
            267.664, 10786.461, -6168.983,
            -845.818, 10786.465, -6168.982,
               267.651, 12318.543, -6171.361
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            -0.000, -0.002, -1.000,
            -0.000, -0.005, -1.000,
            -0.000, -0.005, -1.000,
            -0.000, -0.002, -1.000,
            -0.000, -0.002, -1.000,
               -0.000, -0.005, -1.000
            ])
         },
         uv: {
            itemSize: 2,
            array: new Float32Array([
               0.049, 0.053,
               0.951, 0.858,
               0.049, 0.858,
               0.951, 0.053,
               0.049, 0.053,
               0.049, 0.858
            ])
         }
         };

         material = new THREE.MeshBasicMaterial({
            side: THREE.FrontSide,
            map: THREE.ImageUtils.loadTexture('data_HANGARBU.jpg')
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            -845.818, 10786.465, -5623.598,
            -845.831, 12318.547, -5623.598,
            -882.947, 12318.547, -5668.953,
            -882.947, 12318.547, -5668.953,
            -882.934, 10786.465, -5668.954,
            -845.818, 10786.465, -5623.598,
            304.781, 10786.461, -5668.954,
            304.767, 12318.543, -5668.953,
            267.664, 10786.461, -5623.597,
            267.664, 10786.461, -5623.597,
            304.767, 12318.543, -5668.953,
            267.651, 12318.543, -5623.597,
            -845.818, 10786.465, -5623.598,
            -882.934, 10786.465, -5668.954,
            304.781, 10786.461, -5668.954,
            304.781, 10786.461, -5668.954,
            267.664, 10786.461, -5623.597,
            -845.818, 10786.465, -5623.598,
            -845.818, 10786.465, -6168.982,
            -882.947, 12318.547, -6126.006,
            -845.831, 12318.547, -6171.361,
            -882.947, 12318.547, -6126.006,
            -845.818, 10786.465, -6168.982,
            -882.934, 10786.465, -6126.005,
            304.781, 10786.461, -6126.005,
            267.664, 10786.461, -6168.983,
            304.767, 12318.543, -6126.006,
            267.664, 10786.461, -6168.983,
            267.651, 12318.543, -6171.361,
            304.767, 12318.543, -6126.006,
            -845.818, 10786.465, -6168.982,
            304.781, 10786.461, -6126.005,
            -882.934, 10786.465, -6126.005,
            304.781, 10786.461, -6126.005,
            -845.818, 10786.465, -6168.982,
               267.664, 10786.461, -6168.983
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            -0.774, -0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, 0.000, 0.633,
            -0.774, -0.000, 0.633,
            -0.774, -0.000, 0.633,
            0.774, 0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, 0.000, 0.633,
            0.774, 0.000, 0.633,
            0.774, -0.000, 0.633,
            0.774, -0.000, 0.633,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.757, -0.000, -0.653,
            -0.774, -0.003, -0.634,
            -0.774, -0.003, -0.633,
            -0.774, -0.003, -0.634,
            -0.757, -0.000, -0.653,
            -0.757, -0.000, -0.654,
            0.757, 0.000, -0.654,
            0.757, -0.000, -0.653,
            0.774, -0.003, -0.634,
            0.757, -0.000, -0.653,
            0.774, -0.003, -0.633,
            0.774, -0.003, -0.634,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
               -0.000, -1.000, 0.000
            ])
         }
         };

         material = new THREE.MeshPhongMaterial({
            color: 0xFCFF00,
            shininess: 1.072,
            ambient: 0x191919,
            side: THREE.FrontSide,
            specular: 0xE5E5E5
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            -882.934, 10786.465, -5668.954,
            304.781, 10786.461, -6126.005,
            304.781, 10786.461, -5668.954,
            304.781, 10786.461, -6126.005,
            -882.934, 10786.465, -5668.954,
            -882.934, 10786.465, -6126.005,
            -882.934, 10786.465, -5668.954,
            -882.947, 12318.547, -5668.953,
            -882.947, 12318.547, -6126.006,
            -882.934, 10786.465, -5668.954,
            -882.947, 12318.547, -6126.006,
            -882.934, 10786.465, -6126.005,
            304.781, 10786.461, -5668.954,
            304.781, 10786.461, -6126.005,
            304.767, 12318.543, -6126.006,
            304.781, 10786.461, -5668.954,
            304.767, 12318.543, -6126.006,
               304.767, 12318.543, -5668.953
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, 0.000,
            -0.000, -1.000, -0.000,
            -1.000, -0.000, 0.000,
            -1.000, -0.000, -0.000,
            -1.000, -0.000, 0.000,
            -1.000, -0.000, 0.000,
            -1.000, -0.000, 0.000,
            -1.000, -0.000, 0.000,
            1.000, 0.000, 0.000,
            1.000, 0.000, -0.000,
            1.000, 0.000, 0.000,
            1.000, 0.000, 0.000,
            1.000, 0.000, 0.000,
               1.000, 0.000, 0.000
            ])
         },
         uv: {
            itemSize: 2,
            array: new Float32Array([
               1.000, 0.880,
               0.000, 0.124,
               0.000, 0.880,
               0.000, 0.124,
               1.000, 0.880,
               1.000, 0.124,
               1.000, 0.880,
               0.001, 0.917,
               0.001, 0.087,
               1.000, 0.880,
               0.001, 0.087,
               1.000, 0.124,
               0.000, 0.880,
               0.000, 0.124,
               0.001, 0.087,
               0.000, 0.880,
               0.001, 0.087,
               0.001, 0.917
            ])
         }
         };

         material = new THREE.MeshBasicMaterial({
            side: THREE.FrontSide,
            map: THREE.ImageUtils.loadTexture('data_BODYHULL.jpg')
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

         geometry = new THREE.BufferGeometry();
         geometry.attributes = {
         position: {
            itemSize: 3,
            array: new Float32Array([
            -845.818, 10786.465, -5623.598,
            267.651, 12318.543, -5623.597,
            -845.831, 12318.547, -5623.598,
            267.664, 10786.461, -5623.597,
            267.651, 12318.543, -5623.597,
               -845.818, 10786.465, -5623.598
            ])
         },
         normal: {
            itemSize: 3,
            array: new Float32Array([
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
            -0.000, -0.000, 1.000,
               -0.000, -0.000, 1.000
            ])
         },
         uv: {
            itemSize: 2,
            array: new Float32Array([
               0.049, 0.955,
               0.951, 0.858,
               0.049, 0.858,
               0.951, 0.955,
               0.951, 0.858,
               0.049, 0.955
            ])
         }
         };

         material = new THREE.MeshBasicMaterial({
            side: THREE.FrontSide,
            map: THREE.ImageUtils.loadTexture('data_BODYHULL.jpg')
            });
         mesh = new THREE.Mesh(geometry, material);
         scene.add(mesh);

}
